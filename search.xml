<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo写作</title>
    <url>/2022/10/14/Hexo%E5%86%99%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="Hexo写作"><a href="#Hexo写作" class="headerlink" title="Hexo写作"></a>Hexo写作</h2><h3 id="一些基本命令"><a href="#一些基本命令" class="headerlink" title="一些基本命令"></a>一些基本命令</h3><pre><code>## 是二级标题
### 是三级标题
#### 是四级标题
注意直接的空格和空行
[]() 是链接，如：[百度](www.baidu.com)
</code></pre>
<h3 id="文章中插入图片"><a href="#文章中插入图片" class="headerlink" title="文章中插入图片"></a>文章中插入图片</h3><pre><code>1.设置站点配置_config.yml:将post_asset_folder: false改为post_asset_folder: true
2.安装插件:npm install https://github.com/CodeFalling/hexo-asset-image -- save
3.这个时候生成的博文.md就会多一个与博文同名的文件夹，该文件夹用于保存图片
4.图片命令：![](图片名字.图片格式)例如![](1.png)
</code></pre>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo在页脚添加总访问量访客数和站点运行时间</title>
    <url>/2022/10/14/Hexo%E5%9C%A8%E9%A1%B5%E8%84%9A%E6%B7%BB%E5%8A%A0%E6%80%BB%E8%AE%BF%E9%97%AE%E9%87%8F%E8%AE%BF%E5%AE%A2%E6%95%B0%E5%92%8C%E7%AB%99%E7%82%B9%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<h2 id="Hexo在页脚添加总访问量和访客数"><a href="#Hexo在页脚添加总访问量和访客数" class="headerlink" title="Hexo在页脚添加总访问量和访客数"></a>Hexo在页脚添加总访问量和访客数</h2><h3 id="打开站点配置文件-config-yml添加"><a href="#打开站点配置文件-config-yml添加" class="headerlink" title="打开站点配置文件 _config.yml添加"></a>打开站点配置文件 _config.yml添加</h3><pre><code>busuanzi:
enable: true
</code></pre>
<h3 id="在对应的footer-ejs下添加"><a href="#在对应的footer-ejs下添加" class="headerlink" title="在对应的footer.ejs下添加"></a>在对应的footer.ejs下添加</h3><pre><code>&lt;div style=&quot;font-size: 13px&quot;&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://widget.heweather.net/standard/static/css/he-standard.css?v=1.4.0&quot;&gt;
    &lt;script src=&quot;https://widget.heweather.net/standard/static/js/he-standard.js?v=1.4.0&quot;&gt;&lt;/script&gt;
    &lt;script async=&quot;&quot; src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;
    本站总访问量  &lt;a id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/a&gt; 次,
    本站访客数&lt;a id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/a&gt;人次
&lt;/div&gt;
</code></pre>
<h2 id="Hexo在页脚添加站点运行时间"><a href="#Hexo在页脚添加站点运行时间" class="headerlink" title="Hexo在页脚添加站点运行时间"></a>Hexo在页脚添加站点运行时间</h2><h3 id="在对应的footer-ejs下添加-1"><a href="#在对应的footer-ejs下添加-1" class="headerlink" title="在对应的footer.ejs下添加"></a>在对应的footer.ejs下添加</h3><pre><code>&lt;div style=&quot;font-size: 0.9rem&quot;&gt;
        &lt;span id=&quot;sitetime&quot;&gt;&lt;/span&gt;
        &lt;script language=javascript&gt;
                function siteTime()&#123;
                        window.setTimeout(&quot;siteTime()&quot;, 1000);
                        var seconds = 1000;
                        var minutes = seconds * 60;
                        var hours = minutes * 60;
                        var days = hours * 24;
                        var years = days * 365;
                        var today = new Date();
                        var todayYear = today.getFullYear();
                        var todayMonth = today.getMonth()+1;
                        var todayDate = today.getDate();
                        var todayHour = today.getHours();
                        var todayMinute = today.getMinutes();
                        var todaySecond = today.getSeconds();
                        /* Date.UTC() -- 返回date对象距世界标准时
间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)
                        year - 作为date对象的年份，为4位年份值
                        month - 0-11之间的整数，做为date对象的月
份
                        day - 1-31之间的整数，做为date对象的天数
                        hours - 0(午夜24点)-23之间的整数，做为
date对象的小时数
                        minutes - 0-59之间的整数，做为date对象的
分钟数
                        seconds - 0-59之间的整数，做为date对象的
秒数
                        microseconds - 0-999之间的整数，做为date
对象的毫秒数 */
                        var t1 = Date.UTC(2019,07,16,16,26,13); 
//建站时间
                        var t2 = Date.UTC
(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);
                        var diff = t2-t1;
                        var diffYears = Math.floor(diff/years);
                        var diffDays = Math.floor((diff/days)-
diffYears*365);
                        var diffHours = Math.floor((diff-
(diffYears*365+diffDays)*days)/hours);
                        var diffMinutes = Math.floor((diff-
(diffYears*365+diffDays)*days-diffHours*hours)/minutes);
                        var diffSeconds = Math.floor((diff-
(diffYears*365+diffDays)*days-diffHours*hours-
diffMinutes*minutes)/seconds);
                        document.getElementById
(&quot;sitetime&quot;).innerHTML=&quot; 本站已运行&quot;+/*diffYears+&quot; 年 &quot;+*/diffDays+&quot; 天 
&quot;+diffHours+&quot; 小时 &quot;+diffMinutes+&quot; 分钟 &quot;+diffSeconds+&quot; 秒&quot;;
                &#125;
                siteTime();
        &lt;/script&gt;
    &lt;/div&gt;
</code></pre>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo基本命令</title>
    <url>/2022/10/10/Hexo%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>记录一下Hexo的一些基本命令</p>
<h2 id="Hexo的一些基本命令"><a href="#Hexo的一些基本命令" class="headerlink" title="Hexo的一些基本命令"></a>Hexo的一些基本命令</h2><h3 id="创建一个新的页面"><a href="#创建一个新的页面" class="headerlink" title="创建一个新的页面"></a>创建一个新的页面</h3><pre><code class="bash">$ hexo new post [标题]
</code></pre>
<h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><pre><code class="bash">$ hexo cl/$ hexo clean
</code></pre>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><pre><code class="bash">$ hexo g/$ hexo generate
</code></pre>
<h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><pre><code class="bash">$ hexo s/$ hexo server
</code></pre>
<h3 id="发表草稿"><a href="#发表草稿" class="headerlink" title="发表草稿"></a>发表草稿</h3><pre><code class="bash">$ hexo publish [layout] &lt;filename&gt;
</code></pre>
<h3 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h3><pre><code class="bash">$ hexo deploy
</code></pre>
<h3 id="渲染文件"><a href="#渲染文件" class="headerlink" title="渲染文件"></a>渲染文件</h3><pre><code class="bash">$ hexo render &lt;file1&gt; [file2] ...
</code></pre>
<h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><p>显示 source&#x2F;_drafts 文件夹中的草稿文章。</p>
<pre><code class="bash">$ hexo --draft
</code></pre>
<p>我的GitHub: <a href="https://github.com/jwdnh">GitHub</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo框架+GitHub搭建个人博客</title>
    <url>/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="Hexo教程"><a href="#Hexo教程" class="headerlink" title="Hexo教程"></a>Hexo教程</h2><h3 id="安装Hexo前置准备"><a href="#安装Hexo前置准备" class="headerlink" title="安装Hexo前置准备"></a>安装Hexo前置准备</h3><pre><code>需要先安装node.js(版本尽量是最新版本)和git软件。
查询node版本：在命令提示符下输入：node -v
进入Git页面：右键鼠标，点击 Git Bash
</code></pre>
<p>node.js安装链接: <a href="http://nodejs.cn/">node.js</a></p>
<p>git安装链接: <a href="https://git-scm.com/">git</a></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>Hexo官方页面：<a href="https://hexo.io/zh-cn/">Hexo</a>    <a href="https://hexo.io/zh-cn/docs/">安装说明页面</a></p>
<pre><code>安装Hexo：在你想建立Hexo的目录下进入Git页面
输入以下命令完成安装：npm install -g hexo-cli
两种建立项目的方式：
第一种是新建你的项目文件夹，如：myblog，然后在这个目录下使用Git或命令提示符初始化项目：hexo init
第二种是在Hexo目录下使用Git或命令提示符初始化项目：hexo init myblog
检查是否安装成功：hexo -v
</code></pre>
<p>检查是否能够启动：hexo s<br><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init1.jpg" alt="检查是否能够启动"></p>
<h2 id="将Hexo部署到Github"><a href="#将Hexo部署到Github" class="headerlink" title="将Hexo部署到Github"></a>将Hexo部署到Github</h2><h3 id="Github建立个人仓库"><a href="#Github建立个人仓库" class="headerlink" title="Github建立个人仓库"></a>Github建立个人仓库</h3><pre><code>为什么选择GitHub而不是Gitee，Gitee需要实名认证（手持身份证照上传），比较麻烦。
GitHub可能有访问慢等缺点，好处就是注册好后立马就能操作，之后如果自己有域名也方便替换。
首先，需要有一个github账号。登上账号后建一个仓库：仓库名为你的用户名.github.io，
举例如下：
创建一个和你用户名相同的仓库，后面加.github.io，
只有这样，将来要部署到GitHub的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名.（我这里已经建立过了）
</code></pre>
<p><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init2.jpg" alt="新建仓库">	</p>
<h3 id="生成ssh添加到Github"><a href="#生成ssh添加到Github" class="headerlink" title="生成ssh添加到Github"></a>生成ssh添加到Github</h3><pre><code>在Github上创建仓库完成之后，需要设置ssh免密登录
</code></pre>
<h4 id="1-在Hexo-x2F-myblog目录下打开Git页面：执行如下命令："><a href="#1-在Hexo-x2F-myblog目录下打开Git页面：执行如下命令：" class="headerlink" title="1.在Hexo&#x2F;myblog目录下打开Git页面：执行如下命令："></a>1.在Hexo&#x2F;myblog目录下打开Git页面：执行如下命令：</h4><pre><code class="git">git config --global user.name &quot;yourname&quot;
git config --global user.email &quot;youremail&quot;
</code></pre>
<p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。</p>
<p>输入以下命令查询name和email</p>
<pre><code class="git">git config --global user.name
git config --global user.email
</code></pre>
<h4 id="2-生成SSH"><a href="#2-生成SSH" class="headerlink" title="2.生成SSH"></a>2.生成SSH</h4><pre><code class="git">ssh-keygen -t rsa -C [email]
</code></pre>
<p>示例：ssh-keygen -t rsa -C <a href="mailto:&#120;&#x78;&#x78;&#120;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#109;">&#120;&#x78;&#x78;&#120;&#64;&#113;&#x71;&#46;&#99;&#x6f;&#109;</a><br>然后敲三次回车<br><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init3.jpg">	</p>
<p>在C:\Users\当前用户名下会多一个.ssh的文件夹，里面带.pub后缀的就是你刚刚生成的公钥，复制里面的内容（包括邮箱）</p>
<p>进入GitHub，点击设置<br><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init4.jpg">	<br>选择SSH，点击右上角新增<br><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init5.jpg">	</p>
<p>发现我们需要一个密钥，把我们刚刚复制的密钥粘进去，Title命名无要求<br><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init6.jpg"></p>
<h4 id="3-进行部署"><a href="#3-进行部署" class="headerlink" title="3.进行部署"></a>3.进行部署</h4><pre><code>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后
</code></pre>
<p><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init7.jpg">	</p>
<p>修改内容：</p>
<pre><code>deploy:
  type: git
  repo: git@github.com:jwdnh/jwdnh.github.io.git
  branch: main
</code></pre>
<p>注意这里的repo是GitHub仓库的SSH地址，注意空格</p>
<p><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init8.jpg"></p>
<p>需要先安装deploy-git，也就是部署的命令,这样你才能用命令部署到GitHub。<br>在Hexo&#x2F;myblog目录下打开Git页面：执行如下命令：</p>
<pre><code class="git">npm install hexo-deployer-git --save
</code></pre>
<p>安装好后，依次输入以下命令将项目部署过去<br>在Hexo&#x2F;myblog目录下打开命令提示符：执行如下命令：</p>
<pre><code class="cmd">hexo c
hexo g
hexo d
</code></pre>
<p>hexo c (清除缓存文件 db.json 和已生成的静态文件 public)<br>hexo g (生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写))<br>hexo d (自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写))</p>
<p>注意deploy时会让输个yes</p>
<p>最后回到github上查看自己的仓库看看是否部署成功</p>
<p>将_config.yml文件的url处修改为自己GitHub的地址，如：url: <a href="https://jwdnh.github.io/">https://jwdnh.github.io</a><br>这样输入这个地址打开的就是你的网页了</p>
<p><img src="/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/init9.jpg"></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo框架+particle主题</title>
    <url>/2022/10/14/Hexo%E6%A1%86%E6%9E%B6-particle%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<h2 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h2><h3 id="particle主题"><a href="#particle主题" class="headerlink" title="particle主题"></a>particle主题</h3><h4 id="下载替换"><a href="#下载替换" class="headerlink" title="下载替换"></a>下载替换</h4><p>注意，particle主题作者已经停止运维。</p>
<p>下载主题，我一般习惯在themes文件夹下打开命令提示符页面</p>
<pre><code class="cmd">git clone https://github.com/korilin/hexo-theme-particle.git particle
</code></pre>
<p>这个是该主题的说明：<a href="https://korilin.github.io/hexo-theme-particle-demo/full/public/">particle主题</a></p>
<p>打开站点配置文件 _config.yml<br>鼠标拖到最下面，将主题名称修改为particle</p>
<pre><code># Extensions
## Plugins: https://hexo.io/plugins/
## Themes: https://hexo.io/themes/
theme: particle
</code></pre>
<p>以后如果选择其他主题的话，可以在themes文件夹下下载主题之后进入配置文件替换</p>
<h4 id="该主题的一些注意事项："><a href="#该主题的一些注意事项：" class="headerlink" title="该主题的一些注意事项："></a>该主题的一些注意事项：</h4><pre><code>通过命令生成博文.md后可以在myblog/source/_posts目录下修改博文
myblog/public目录下是执行hexo g命令后生成的主页
在myblog/themes/particle/layout里修改页面的格式
在myblog/themes/particle/source/css/maiden-color.styl里修改样式的颜色
在myblog/themes/particle/source/_config.yml里修改页面(在同级目录下新建images文件夹，将照片保存至此处)
在myblog/_config.yml里修改title和author
</code></pre>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>前端学习经验</title>
    <url>/2022/10/14/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="54ce5c2fff325c260c25d2f78225dd5372386166720db801c8f2921846c07b57">599f1837a0a2c5de7b8169bc5ea4e67e0689f865c0f52ea084587883fbf1ba33cdda61463c5b18de4397a36a147e4545de67793351b3743ac4535b6fe2dd0e49ff85147967f98bbabe9b9ad476a42f693d405186a83be86f5d4b2f40c9bf9bef2b468367219b372e3c71dfc510a175a23e07f368aa747e5ed95861279dd183e04ab35a5c386c0dc01453cbe3b21b9b88c299fb752457aa5414cd2c61661fe213e3e7f8cd1db29879b6afcb616cd77c9b478240cc26248f1115212aaa813665bf309c63834fc2f0c13b4213718f3fa640018bf4da73773b925ed46e39112ac395b4bfa748baee47dc49f20379123bdc10cd0fd12b0ed78a4e6d4b2e8eb5e5500566b83b5bf9891b0e93e4b060b4178dc24bb48155eff2e1ebe474e05c6b77dcdf1cd5635dfc79c543f9d5b5d6c0e0e34d4bd445562492972b7436677d97a65111dab314cff6a50762f64ed0cf8f39697468a75f66bde63a0cb18b572c8ffffc9607716d0564e747edeffe6440ca52920c2eb553b38a112927c76972c43dc5a56fb7c0d6694bcfa925b14181e111a27686a072baf25e4107dba79ab93daeec85d3e74d719e82715337d07f33ce59342cfeddc7c2c9bfa0229728a55f54dceda72520039d78913098480c054656bc3ff42ccfe3446a641346086ae15f3365a3e979c94bbd8d3a9f32301e98f5a2ce8d8253a291308115c7cb35d30d65b41e1f2a37a8322330c1a35ec4f944d8d864cd39a2d1beae73ef04e7d6858adc8c51c483f53d7a4080410df73748a474393c55108c43ffeaf147fe61af051491f38583e8f253cfcef10eb65923d8a917c9e7e9b0022c05242696d06302f25351eabe0db016069fb6b266258ed2f14f19d110f72029edabdca442354f6111dd333b212cfaddeb2ad3f7fdac728c53cd00419d2f978d6df6629c5c5baf83face4eb294b1dd3cfe0591659be656efa3fd5d30136d3f88a569098eee3f1ddc9410fc1a2ce9bdcac3e9d35a4ea6ac411fc480d2edb950c43c44dfb4ad715b7d83b4df25ea2ca06eab410ce91196b105210a0525e68c31e57280352b54ecec6e4d9cef785eaf81c85cd526c7e84325bfeb1cfff4bd48654702ced71fc94bc3a4d3aec44df6e76ff64de6c33c05dfc44d7ab97dccb58501842eb17375d416dea594a95f9b67d163c196fcceeb1595c6e30ae0f62002aa0eed254fe4a62593e3e46f3049c40d10be427e27db74d56c82047623689eed926fcec25c3d3fdc1536a418e671f1c869b95a44ae2e86b8ddb58c8f50b65af04ccaac90575cadd02e93c06ccc573c2c531ae1640ca00e6e764ca0a0a6614bd73d48bfced05359635f3f1253e5328a73545b8d4c62f93dd993821cae24d8abefbbc7848b63fefb1b076646582be014271bbec86c2b19a58124f1bc1ed5dc0c68884823b225aef154df11573e75c28be079b15d2fe601deb1b415248c6f1d71761f472b2ba5f6d70a1b663e81923b34ef6acea3f6aef075cf3054e1130037c7f99b88911fa38274682f81f8a21e27d8e51da931bb3296c079c558fc6c8e45878a7d2bb63c03141c98f546cfd78e03dcc5491ed48176d449e02d8a3684f2a4b1d815ff4b87c8f36ac2259bd0f294cc5e62bd30cb6e1dac616d02526cde754279962dbf7a54a176d577de1e36849a90934ba3dec917eb9431556ae76fc89591552fd6f809e464fa8c21ccda78d260da31a40bfbdf4be1f48a79010eb38d1bb04adbb172a8733104fd5ee4bc63c1348050c7cd2cb3707c770c77d8ba43f8c0bd44aa3f2dd0e24210f8ffd4b894a6e40b457585801785635c460804458875d97e81f244a9164c0de0ee3f8e714d92961247e591296aebdf380d083c97a47ee7b517c829e2e70e99dd722d078c665c549934e234420abeb61a35eb92b5d5a052565c5a9357f1b1ecf7eccf98b6820ab6f17bb3a2c468fd7a33bf2190337a19148bc72e83f9c69076f5dd09a81fbfc2840738232961a4366ba5a669b7974c1f30f7685c2058fffbcd93e071dd108879e936fd983953f537922e1393b32014931564b4e5fa309e952cf275458d23fbaaf31ce638df08b3</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看文章</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
